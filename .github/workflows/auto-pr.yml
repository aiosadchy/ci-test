name: Create Pull Request

on:
  push:
    branches:
      - release/*
      - feature/*

jobs:
  create-pull-request:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Create Pull Request
        uses: actions/github-script@v6
        with:
          script: |
            const get_release_list = async () => {
              const release_list = [];
              const exec_options = {};
              exec_options.listeners = {
                stdline: (data) => {
                  release_list.push(data);
                }
              };
              await exec.exec(
                'git',
                [
                  'for-each-ref',
                  '--format="%(refname:short)"',
                  'refs/heads/release/'
                ],
                exec_options
              );
              core.info("release list is:");
              core.info(release_list);
              return release_list;
            };

            const { owner, repo } = context.repo;
            const branch = '${{ github.ref_name }}';
            core.info(branch);
            const release = branch.toLowerCase().startsWith('release/')
                          ? branch.substring('release/'.length)
                          : null;

            const release_list = await get_release_list();

            core.info(release_list);

            const latest_release = release_list.sort(
                (a, b) => a.localeCompare(b, undefined, { numeric:true })
            );

            core.info(latest_release);

            const base_branch = release ? 'master' : latest_release;
            const create_draft = (!!release);

            try {
              const result = await github.rest.pulls.create({
                owner,
                repo,
                title:  branch,
                head:   branch,
                base:   base_branch,
                body:   'This pull request is auto-generated.',
                draft:  create_draft
              });
            } catch(e) {
              const message = e.message;
              if (message.toLowerCase().search('validation') == -1) {
                throw e;
              }
            }
