name: Create Pull Request

on:
  push:
    branches:
      - release/*
      - feature/*

jobs:
  create-pull-request:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Create Pull Request
        uses: actions/github-script@v6
        with:
          script: |
            const { owner, repo } = context.repo;
            const branch = '${{ github.ref_name }}';
            const master_branch = 'master'
            const is_release_pr = branch.toLowerCase().startsWith('release/');

            const get_release_list = async () => {
              const release_list = [];
              const exec_options = {};
              exec_options.listeners = {
                stdline: (data) => {
                  release_list.push(data.trim());
                }
              };
              await exec.exec(
                'git',
                [
                  'for-each-ref',
                  '--format="%(refname:short)"',
                  'refs/heads/release/'
                ],
                exec_options
              );
              return release_list;
            };

            const get_latest_release = async () => {
              const release_list = await get_release_list();
              release_list.sort(
                  (a, b) => b.localeCompare(a, undefined, { numeric:true })
              );
              core.info('Release branches are:');
              core.info(((release_list.length > 0)
                        ? release_list_sorted
                        : '<none>')
              );
              if (release_list.length > 0) {
                const latest_release = release_list[0];
                core.info('Latest release branch is ${{ latest_release }}.');
                return latest_release;
              }
              return master_branch;
            };

            const base_branch = is_release_pr
                              ? master_branch
                              : await get_latest_release();

            core.info('Attempting to create pull request.');
            core.info('Base branch is ${{ base_branch }}.');

            try {
              const result = await github.rest.pulls.create({
                owner,
                repo,
                title:  branch,
                head:   branch,
                base:   base_branch,
                body:   'This pull request is auto-generated.',
                draft:  is_release_pr
              });
            } catch(e) {
              const message = e.message;
              if (message.toLowerCase().search('validation') == -1) {
                core.error('Unhandled error: ${{ e }}.');
                throw e;
              } else {
                core.info('Such pull request already exists.');
              }
            }
